#!/bin/bash

# detect-tag-changes: Detects Helm chart tag changes and generates PR/release links.
# This is a template file. Placeholders like %%GITHUB_URL_BASE%%
# and %%GITHUB_REPO_PREFIX%% will be replaced by a setup script.

# Initialize an array to store unique URLs
urls=()

# Get all changed files under 'values/' when comparing against origin/main
# Ensure your main/default branch is 'origin/main' or adjust this line.
changed_files=$(git diff --name-only origin/main HEAD 2>/dev/null | grep '^values/' || true)

if [ -z "$changed_files" ]; then
    echo "No relevant changes detected in Helm chart values files (values/ directory against origin/main)."
    exit 0
fi

# Placeholders to be replaced by the setup script:
# GITHUB_URL_BASE is typically like https://github.com/YourOrg 
GITHUB_URL_BASE="%%GITHUB_URL_BASE%%"
# GITHUB_REPO_PREFIX is an optional prefix for repository names, e.g., "service-" or "" if none.
# Ensure it ends with a hyphen if it's a prefix, or is empty.
GITHUB_REPO_PREFIX="%%GITHUB_REPO_PREFIX%%"

while IFS= read -r file; do
    # Extract repository name from the path (format: values/<repo>/...)
    # This <repo> is the part *after* any potential GITHUB_REPO_PREFIX
    repo_name_from_path=$(echo "$file" | cut -d'/' -f2)

    # Get the diff for this file compared to origin/main, showing only changed lines
    file_diff=$(git diff origin/main HEAD --unified=0 "$file" 2>/dev/null)

    # Find the added tag line (lines starting with '+' that are not '+++' and contain 'tag:')
    new_tag_line=$(echo "$file_diff" | grep -E '^\+[^+]' | grep 'tag:' || true)

    if [ -z "$new_tag_line" ]; then
        continue # Skip if no relevant tag change is detected in this file's diff
    fi

    # Extract and clean up the new tag value (remove leading '+', 'tag:', and whitespace)
    new_tag=$(echo "$new_tag_line" | sed 's/^+//' | sed 's/tag:[[:space:]]*//' | xargs)

    # Extract PR number from the tag if it exists (format: X.Y.Z-pr-<number>)
    pr_number=$(echo "$new_tag" | sed -E -n 's/.*-pr-([0-9]+).*/\1/p')

    url=""
    # Construct the full repository path including the prefix
    full_repo_identifier="${GITHUB_REPO_PREFIX}${repo_name_from_path}"

    if [ -n "$pr_number" ]; then
        # If a PR number exists, generate a GitHub PR link
        url="${GITHUB_URL_BASE}/${full_repo_identifier}/pull/${pr_number}"
    else
        # Otherwise, generate a GitHub release tag link
        # Ensure tag for URL starts with 'v' if it's a semantic version without it
        tag_for_url="$new_tag"
        if [[ "$new_tag" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-.+)?$ && ! "$new_tag" == v* ]]; then
            tag_for_url="v${new_tag}"
        fi
        url="${GITHUB_URL_BASE}/${full_repo_identifier}/releases/tag/${tag_for_url}"
    fi

    # Add the URL to the list if it's not empty
    if [ -n "$url" ]; then
        urls+=("$url")
    fi
done <<< "$changed_files"

if [ ${#urls[@]} -gt 0 ]; then
    echo "Service PRs/Releases:"
    # Print unique URLs sorted
    printf -- "- %s\n" $(printf "%s\n" "${urls[@]}" | sort -u)
    echo "---"
    echo "PR generated by argopr"
else
    echo "No relevant Helm chart tag updates detected in changed files that could be linked."
fi
